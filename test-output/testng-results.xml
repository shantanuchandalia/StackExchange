<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="20" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="72741" started-at="2020-08-12T18:56:05 IST" finished-at="2020-08-12T18:57:17 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="72741" started-at="2020-08-12T18:56:05 IST" finished-at="2020-08-12T18:57:17 IST">
      <class name="badge.api.sanity.Tags_APItest">
        <test-method status="PASS" signature="setup()[pri:0, instance:badge.api.sanity.Tags_APItest@68bbe345]" name="setup" is-config="true" duration-ms="0" started-at="2020-08-12T18:57:01 IST" finished-at="2020-08-12T18:57:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="StatusCodeVerification()[pri:0, instance:badge.api.sanity.Tags_APItest@68bbe345]" name="StatusCodeVerification" duration-ms="2254" started-at="2020-08-12T18:57:01 IST" description="[API][Tags] Verify the status code" finished-at="2020-08-12T18:57:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCodeVerification -->
        <test-method status="PASS" signature="getResponseBody()[pri:0, instance:badge.api.sanity.Tags_APItest@68bbe345]" name="getResponseBody" duration-ms="2889" started-at="2020-08-12T18:57:04 IST" description="[API][Tags] Verify the response body" finished-at="2020-08-12T18:57:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseBody -->
        <test-method status="PASS" signature="verifyDefaultSort()[pri:0, instance:badge.api.sanity.Tags_APItest@68bbe345]" name="verifyDefaultSort" duration-ms="3390" started-at="2020-08-12T18:57:07 IST" description="[API][Tags] Verify that the rank is the default sort" finished-at="2020-08-12T18:57:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDefaultSort -->
        <test-method status="PASS" signature="verifyRank()[pri:0, instance:badge.api.sanity.Tags_APItest@68bbe345]" name="verifyRank" duration-ms="2989" started-at="2020-08-12T18:57:10 IST" description="[API][Tags] Verify that Bronze is the greatest, when rank sort is done" finished-at="2020-08-12T18:57:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRank -->
        <test-method status="PASS" signature="verifyResponseContent()[pri:0, instance:badge.api.sanity.Tags_APItest@68bbe345]" name="verifyResponseContent" duration-ms="4441" started-at="2020-08-12T18:57:13 IST" description="[API][Tags] Verify that the response content is JSON" finished-at="2020-08-12T18:57:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseContent -->
      </class> <!-- badge.api.sanity.Tags_APItest -->
      <class name="badge.api.sanity.Recipients_APItest">
        <test-method status="PASS" signature="setup()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="setup" is-config="true" duration-ms="333" started-at="2020-08-12T18:56:05 IST" finished-at="2020-08-12T18:56:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="StatusCodeVerification()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="StatusCodeVerification" duration-ms="6971" started-at="2020-08-12T18:56:05 IST" description="[API][Recipients] Verify the status code [Without ID]" finished-at="2020-08-12T18:56:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCodeVerification -->
        <test-method status="PASS" signature="getResponseBody()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="getResponseBody" duration-ms="3120" started-at="2020-08-12T18:56:12 IST" description="[API][Recipients] Verify the response body" finished-at="2020-08-12T18:56:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseBody -->
        <test-method status="PASS" signature="getResponseContent()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="getResponseContent" duration-ms="3304" started-at="2020-08-12T18:56:15 IST" description="[API][Recipients] Verify the response content is JSON" finished-at="2020-08-12T18:56:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseContent -->
        <test-method status="PASS" signature="verifyContentWithPageSize()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="verifyContentWithPageSize" duration-ms="3874" started-at="2020-08-12T18:56:18 IST" description="[API][Recipients] Verify that the content is displayed as per the page size" finished-at="2020-08-12T18:56:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContentWithPageSize -->
        <test-method status="PASS" signature="verifyCorrectBadgeID()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="verifyCorrectBadgeID" duration-ms="3703" started-at="2020-08-12T18:56:22 IST" description="[API][Recipients] Verify correctness of badge ID in the response [ID provided]" finished-at="2020-08-12T18:56:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCorrectBadgeID -->
        <test-method status="PASS" signature="verifyStatusCodeWith101()[pri:0, instance:badge.api.sanity.Recipients_APItest@72b6cbcc]" name="verifyStatusCodeWith101" duration-ms="3849" started-at="2020-08-12T18:56:26 IST" description="[API][Recipients] Verify the status code when 101 badge_ids are to be processed" finished-at="2020-08-12T18:56:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStatusCodeWith101 -->
      </class> <!-- badge.api.sanity.Recipients_APItest -->
      <class name="badge.api.sanity.ID_APItest">
        <test-method status="PASS" signature="setup()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="setup" is-config="true" duration-ms="0" started-at="2020-08-12T18:56:30 IST" finished-at="2020-08-12T18:56:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="StatusCodeVerification()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="StatusCodeVerification" duration-ms="3384" started-at="2020-08-12T18:56:30 IST" description="[API][ID] Verify the status code." finished-at="2020-08-12T18:56:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCodeVerification -->
        <test-method status="PASS" signature="StatusCodeVerificationWithoutParameters()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="StatusCodeVerificationWithoutParameters" duration-ms="2344" started-at="2020-08-12T18:56:33 IST" description="[API][ID] Verify the status code when the parameters are not provided [automatically takes the default value]" finished-at="2020-08-12T18:56:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCodeVerificationWithoutParameters -->
        <test-method status="PASS" signature="getResponseBody()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="getResponseBody" duration-ms="2728" started-at="2020-08-12T18:56:36 IST" description="[API][ID] Verify the response body" finished-at="2020-08-12T18:56:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseBody -->
        <test-method status="PASS" signature="getResponseContentType()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="getResponseContentType" duration-ms="4862" started-at="2020-08-12T18:56:38 IST" description="[API][ID] Verify that the response is in JSON" finished-at="2020-08-12T18:56:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseContentType -->
        <test-method status="PASS" signature="multipleBadgeIDLimit100()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="multipleBadgeIDLimit100" duration-ms="7670" started-at="2020-08-12T18:56:43 IST" description="[API][ID] Verify the status code when 100 badge_ids are to be processed" finished-at="2020-08-12T18:56:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleBadgeIDLimit100 -->
        <test-method status="PASS" signature="multipleBadgeIDLimit101()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="multipleBadgeIDLimit101" duration-ms="2346" started-at="2020-08-12T18:56:51 IST" description="[API][ID] Verify the status code when 101 badge_ids are to be processed" finished-at="2020-08-12T18:56:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleBadgeIDLimit101 -->
        <test-method status="PASS" signature="verifyBadgeIDInputNegative()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="verifyBadgeIDInputNegative" duration-ms="2405" started-at="2020-08-12T18:56:53 IST" description="[API][ID] Verify that error is thrown when the badge_id is not sent as an int" finished-at="2020-08-12T18:56:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBadgeIDInputNegative -->
        <test-method status="FAIL" signature="verifyBadgeIDMapping()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="verifyBadgeIDMapping" duration-ms="2494" started-at="2020-08-12T18:56:56 IST" description="[API][ID] Verify that the data is picked correctly as per the badge_id" finished-at="2020-08-12T18:56:58 IST">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot invoke method getAt() on null object]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot invoke method getAt() on null object
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:57)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.internal.common.assertion.Assertion$getResult.call(Unknown Source)
at io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:94)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at io.restassured.assertion.BodyMatcherGroup$_validate_closure2.doCall(BodyMatcherGroup.groovy:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
at groovy.lang.Closure.call(Closure.java:412)
at groovy.lang.Closure.call(Closure.java:428)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3562)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3547)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3647)
at org.codehaus.groovy.runtime.dgm$101.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:247)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:480)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at badge.api.sanity.ID_APItest.verifyBadgeIDMapping(ID_APItest.java:93)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException: Cannot invoke method getAt() on null object
at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:44)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:34)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at Script1.run(Script1.groovy:1)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:427)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:461)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:436)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:182)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:73)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 80 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBadgeIDMapping -->
        <test-method status="FAIL" signature="verifySemicolonDelimiter()[pri:0, instance:badge.api.sanity.ID_APItest@a7e666]" name="verifySemicolonDelimiter" duration-ms="3316" started-at="2020-08-12T18:56:58 IST" description="[API][ID] Verify that by sending multiple IDs [2], multiple items are present in json " finished-at="2020-08-12T18:57:01 IST">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot invoke method getAt() on null object]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot invoke method getAt() on null object
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:57)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.internal.common.assertion.Assertion$getResult.call(Unknown Source)
at io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:94)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at io.restassured.assertion.BodyMatcherGroup$_validate_closure2.doCall(BodyMatcherGroup.groovy:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
at groovy.lang.Closure.call(Closure.java:412)
at groovy.lang.Closure.call(Closure.java:428)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3562)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3547)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3647)
at org.codehaus.groovy.runtime.dgm$101.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:247)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:480)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at badge.api.sanity.ID_APItest.verifySemicolonDelimiter(ID_APItest.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException: Cannot invoke method getAt() on null object
at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:44)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:34)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at Script1.run(Script1.groovy:1)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:427)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:461)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:436)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:182)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:73)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 80 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySemicolonDelimiter -->
      </class> <!-- badge.api.sanity.ID_APItest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
